# vim: filetype=gitconfig

[user]
  name  = Simon Coffey
  email = simon@urbanautomaton.com

[advice]
  detachedHead = false

[alias]
  f     = "!f() { local ref=${1:-HEAD}; git commit --fixup=$ref; }; f"
  s     = "!f() { local ref=${1:-HEAD}; git commit --squash=$ref; }; f"
  splat = commit --amend --no-edit
  d     = diff
  dw    = diff --word-diff
  st    = status -sb
  l     = log --graph --pretty=format:'%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' --abbrev-commit --decorate --decorate-refs-exclude=refs/tags/deploy-*
  lb    = log --reverse --pretty=format:'%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' --abbrev-commit --decorate --decorate-refs-exclude=refs/tags/deploy-* master..HEAD
  sed   = ! git ls-files -z | xargs -0 sed -i -e
  ctags = ! .git/hooks/ctags
  lm    = "!f() { local method=$1; local file=$2; [[ -n \"$method\" && -n \"$file\" ]] || exit 1; git log -L :$method:$file; }; f"
  lmw   = "!f() { local method=$1; local file=$2; [[ -n \"$method\" && -n \"$file\" ]] || exit 1; git log -w -L :$method:$file; }; f"
  hop   = ! SKIP_HOOKUP=1 git checkout

  files-changed = diff-tree --no-commit-id --name-only -r

  recent-branch = branch --sort='committerdate' --format='  %(color:bold yellow)%(refname:lstrip=2)%(color:reset)%(upstream:trackshort) %(committerdate)'

  br = ! git branch --sort='-committerdate' | fzf | xargs git checkout

  push-each = ! git-push-each

  reup = ! git-reup

  redate = ! git-redate

  db = ! git-db

  gone = ! git-gone

  prettier = ! git-prettier
  prettier-branch = ! git-prettier-branch

  whom = commit --amend --reset-author --no-edit

  message = show --quiet --format=%B

  wip = "!f() { local message=\"WIP: ${@}\"; git commit --no-verify -m \"${message/%: /}\"; }; f"

  unchanged        = update-index --assume-unchanged
  nounchanged      = update-index --no-assume-unchanged
  marked-unchanged = !git ls-files -v | grep "^[[:lower:]]" | cut -f2 -d' '
  reset-unchanged  = !git update-index --no-assume-unchanged $(git marked-unchanged)
  tracking-changes = !git fetch && git diff --stat HEAD...@{u}

  root = rev-parse --show-toplevel

[commit]
  verbose = true

[merge]
  keepBackup = false
  tool       = fugitive
  conflictstyle = diff3

[mergetool "fugitive"]
  cmd = vim -f -c \"Gvdiff\" \"$MERGED\"

[status]
  showuntrackedfiles = all

[diff]
  compactionHeuristic = true

[color]
  diff        = auto
  status      = auto
  branch      = auto
  interactive = auto
  ui          = true
  pager       = true

[color "branch"]
  current = yellow reverse
  local   = yellow
  remote  = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old  = red bold
  new  = green bold

[color "status"]
  added     = yellow
  changed   = green
  untracked = cyan

[core]
  pager          = less -FRSX
  excludesfile   = ~/.gitignore_global
  attributesFile = ~/.gitattributes

[init]
  templatedir = ~/.git_template
  defaultBranch = main

[push]
  default = simple

[pull]
  rebase = merges

[rebase]
  autostash = true
  autosquash = true

# Verify binary blobs, see
# https://groups.google.com/forum/#!topic/binary-transparency/f-BI4o8HZW0
[transfer]
  fsckObjects = true
[fetch]
  fsckObjects = true
  prune = true
[receive]
  fsckObjects = true

[include]
  path = ~/.gitconfig_local

[grep]
  extendedRegexp = true
